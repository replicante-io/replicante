# The section below is for the API server configuration options.
api:
  # The interface and port to bind the API server onto.
  #
  # By default, only bind to the local interface.
  # Production environments should place an HTTPS proxy in front of the API.
  bind: '127.0.0.1:16016'


# The section below is for agent discovery configuration options.
#
# Replicante core uses a pull model to interact with agents.
# Discovery is the way the agents that should be monitor are found.
discovery:
  # Interval (in seconds) to wait after a discovery run before starting another one.
  interval: 60

  # Discovery backends configuration.
  #
  # Backends are a way to support an extensible set of discovery solutions.
  # Each backend has its own options as described below.
  #
  # Available backends are:
  #
  #   * `files`: discovers agents from files.
  backends:
    # The `files` backend: discovers agents from files.
    #
    # The `files` backend can be useful to delegate discovery to unsupported systems.
    # Examples are configuration managemnet tools (ansible, chef, puppet, ...).
    #
    # This is a list of files that are periodically read to perform discovery.
    files: []


# The section below is for the logging configuration options.
logging:
  # Flush logs asynchronously.
  # 
  # Pro:
  #     Async log flushing is more efficient as logging
  #     statements are not blocked by the drain.
  # 
  # Con:
  #     If the process crashes logs in the buffer may be lost.
  #
  # Recommendation:
  #     Keep async logging enabled unless replicante is crashing
  #     and the logs don't have any indications of why.
  #
  #     Async logging may also be disabled in testing, debugging,
  #     or developing environments.
  async: true

  # The drain to send logs to.
  # This option also determines the format and destination of logs.
  #
  # Available options:
  #
  #   * 'json': prints JSON formatted logs to standard output.
  #   * 'journald': if enabled at compile time, sends logs to systemd journal.
  drain: json

  # The minimum logging level.
  #
  # Available options:
  #
  #   * 'critical'
  #   * 'error'
  #   * 'warning'
  #   * 'info'
  #   * 'debug' (only avaialbe in debug builds)
  level: info


# The section below is for the storage configuration options.
storage:
  # The database to use for persisten storage.
  #
  # DO NOT CHANGE after initial configuration.
  # This option is to allow users to choose a supported database that best fits
  # their use and environment.
  #
  # To change this option you will need to "Upgrade by rebuild".
  # See the documentation for more details on this process.
  #
  # Available options:
  #
  #   * 'mongodb' (recommended)
  backend: mongodb

  # Any backend-specific option is set in the `options` dictionary.
  # The available options vary from database to database and are documented below.
  #
  # MongoDB options
  options:
    # Name of the MongoDB database to use for persistence.
    #
    # DO NOT CHANGE after initial configuration.
    # This option is to allow users to choose a supported database that best fits
    # their use and environment.
    #
    # To change this option you will need to "Upgrade by rebuild".
    # See the documentation for more details on this process.
    db: replicante  # (recommended)

    # URI of the MongoDB Replica Set or sharded cluster to connect to.
    uri: mongodb://localhost:27017/


# The section below is for the distributed tracing configuration options.
tracing:
  # The distributed tracing backend to integrate with.
  #
  # Available options:
  #
  #   * 'noop'
  #   * 'zipkin'
  backend: noop

  # Any backend-specific option is set in the `options` dictionary.
  # The available options vary from tracer to tracer and are documented below.
  #
  # Zipkin options
  #options:
  #  # (required) The service name for this zipkin endpoint.
  #  service_name: replicante
  #
  #  # (required) List of kafka seed hostnames.
  #  kafka:
  #    - HOST1:9092
  #    - HOST2:9092
  #
  #  # (optional) The kafka topic to publish spans to.
  #  topic: zipkin
